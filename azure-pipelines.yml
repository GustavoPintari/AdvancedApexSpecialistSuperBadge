# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
resources:
  webhooks:
    - webhook: Incoming     ### Webhook name
      connection: Incoming  ### Incoming webhook service connection name

variables:
  - group: GitHub Pipeline
  
steps:
- checkout: self
  persistCredentials: true

- script : |
    echo "##vso[task.setvariable variable=WORK_ITEM_ID]${{ parameters.Incoming.resource.id }}"
    echo "##vso[task.setvariable variable=WORK_ITEM_TYPE]${{ parameters.Incoming.resource.fields['System.WorkItemType'] }}"
    echo "##vso[task.setvariable variable=PARENT_WORK_ITEM_ID]${{ parameters.Incoming.resource.fields['System.Parent'] }}"

    echo "$WORK_ITEM_ID"
    echo "$(VALID_WORK_ITEM_TYPES)"

    if [[ -z "$WORK_ITEM_ID" || ! "$WORK_ITEM_TYPE" =~ ^$(VALID_WORK_ITEM_TYPES)$ ]]; then
      exit 1
    fi
  displayName: "Check incoming"
  
- script: |
    echo "${MY_JSON}"
  env:
    MY_JSON: ${{ convertToJson(parameters.Incoming.resource) }}

- script: |
    gh auth status
  env:
    GITHUB_TOKEN: $(GH_TOKEN)
  displayName: "Verificar autenticação no GitHub"
  
- script: |
    git config --global user.name $(GIT_USER_NAME)
    git config --global user.email $(GIT_USER_EMAIL)
  displayName: "Configurar identidade Git"

- script: |
    echo "$WORK_ITEM_ID"
    echo "$WORK_ITEM_TYPE"
    echo "$PARENT_WORK_ITEM_ID"

    BASE_BRANCH="qa"

    if [[ "$WORK_ITEM_TYPE" == "Feature" ]]; then
      PREFIX="F-"
    else
      PREFIX="T-"
      [[ "$WORK_ITEM_TYPE" == "Issue" ]] && PREFIX="I-"

      PARENT_WORK_ITEM_ID="${{ parameters.Incoming.resource.fields.System.Parent }}"

      if ! git ls-remote --heads origin "$branch" | grep "$branch" > /dev/null; then
        branch="F-${WORK_ITEM_ID}"
        
        git fetch origin $BASE_BRANCH

        git checkout -b $branch origin/$BASE_BRANCH
        git push origin $branch
      fi
    fi

    BRANCH="${PREFIX}${WORK_ITEM_ID}"
    
      echo "Crindo a branch $BRANCH."

      git checkout -b $BRANCH

      echo "Este é um arquivo criado automaticamente pela pipeline." > pipeline.txt
      git add pipeline.txt
      git commit -m "Pipeline"
        
      git push origin $BRANCH

      TITLE="AB#$WORK_ITEM_ID"

      # gh pr create --base main --head "$BRANCH" --title "$TITLE" --body "Descrição gerada pelo pipeline."
  env:
      GITHUB_TOKEN: $(GH_TOKEN)
  displayName: 'Criar nova branch no Git'